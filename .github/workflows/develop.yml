name: Build and Deploy to Sandbox

on:
  push:
    branches: [ develop ]
  
env:

  # *************************************************************************************************************************************************************************
  # **************************************** DEVELOPERS ARE RESPONSIBLE IN MANAGING PARAMETERS BELOW THIS LINE **************************************************************
  # *************************************************************************************************************************************************************************

  # **************************** AWS Deployment (Required only for AWS on-prem deployment. ignore for CloudHub Deployment) **************************************************
  #target: api-us-int-aws-dev                                                                  # Server to deployed to for on-prem only
  #type: cluster                                                                               # Server type to be deployed for on-prem only

  # **************************************** MULE RUNTIME PROPERTIES ********************************************************************************************************
  deploymentTarget: "Cloudhub"                                                                     # Either 'CloudHub' or 'AWS' 
  muleVersion: 4.4.0                                                                          # Mule Version to be deployed - maps to app.runtime
  deploymentTimeout: 1000000                                                                  # deployment timeout setting
  workers: 1                                                                                  # Number of workers
  workerType: Micro                                                                           # Size of worker - MICRO (default; 0.1 vCores). Other Size of worker below requires approval
                                                                                              #                  SMALL (0.2 vCores)
                                                                                              #                  MEDIUM (1 vCore )
                                                                                              #                  LARGE (2 vCores)
                                                                                              #                  XLARGE (4 vCores)
                                                                                              #                  XXLARGE (8 vCores)
                                                                                              #                  4XLARGE (16 vCores)
  region: us-east-1                                                                           # must match DLB and VPC region. refer to parameter syntax at https://docs.mulesoft.com/mule-runtime/4.3/deploy-to-cloudhub#cloudhub-deploy-reference
  applicationName:  cicddemo-myfirst                                                # Application Name in Runtime Manager. Use the standard format ddb-{mule app name}-{env}-{region name}
                                                                                              # Use DDB standard naming convention for region name (use1 for us-east-1; euc1 for eu-central-1; apn1 for apac-north-1; ru for Russia).
  # **************************************** API MANAGER PROPERTIES **********************************************************************************************************
  #apiId: "17357747"                                                                           # for Autodiscovery purpose. Must match API ID in API Manager 

  # **************************************** MULE APPLICATION PROPERTIES *****************************************************************************************************
  workflowEnv: Sandbox                                                                            # this maps to mule application {env} properties
  #key: ${{ secrets.np_encryptdecryptkey }}                                                       # Key to decrypt secure properties. Make sure to use AES algorithm 256 bits
  
 
  # **************************************** API VISUALIZER PROPERTIES (Required to be updated accurately by Mule Developers based on the APIs) ******************************
  #apiLayer: System                                                                               # exp - experience API; prc - process API; sys - system API
  #apiTags: gca,aws,sfmc,epi,investors                                                           # Tags to be configured in Anypoint Visualizer
  
  # **************************************** CUSTOM POM.XML XML TAG NAME CHANGE **********************************************************************************************
  # ****************************** IN MOST CASES, YOU DON'T NEED TO MAKE ADJUSTMENT ******************************************************************************************
  # Property names - in most cases these should not need adjustment from the defaults
  # These values should correspond to the XML tag defined in your POM file. What is XML tag? it is illustrated as: <xmlTag>${values}</xmlTag>
  # Only make changes here if you understand what you are doing!

  anypointPlatformBaseUriProperty: "anypointPlatformBaseUri"                                  # Name of the property that contains the Anypoint Base URI
  muleVersionProperty: "app.runtime"                                                          # Name of the property that contains the MuleSoft runtime version
  deploymentRegionProperty: "region"                                                          # Name of the property that contains the VPC region
  usernameProperty: "anypoint.username"                                                                # Name of the property that contains the Anypoint deployment username
  passwordProperty: "anypoint.password"                                                                # Name of the property that contains the Anypoint deployment password
  workersProperty: "workers"                                                                  # Name of the property that contains the number of the workers
  workerTypeProperty: "workerType"                                                            # Name of the property that contains the size of the worker
  anypointPlatformEnvProperty: "env"                                        # Name of the property that contains the Anypoint environment
  #businessgroupIdProperty: "businessgroupId"                                                  # Name of the property that contains the Anypoint Business Group Id
  #anypointPlatformBusinessGroupProperty: "anypoint_platform_business_group"                   # Name of the property that contains the Anypoint Business Group Name
  applicationNameProperty: "appname"                                                  # Name of the property that contains the application name
  envProperty: "env"                                                                          # Name of the property that selects the appropriate config files
  #anypointPlatformClientIdProperty: "anypoint_platform_client_id"                             # Name of the property that contains the Anypoint Platform Client Id
  #anypointPlatformClientSecretProperty: "anypoint_platform_client_secret"                     # Name of the property that contains the Anypoint Platform Client Secret
  #keyProperty: "security.key"                                                                          # Name of the property that contains the security key to decrypt sensitive properties
  #apiAutodiscoveryIdProperty: "api.autodiscoveryID"                                           # Name of the property that contains the API Autodiscovery Id
  #apiLayerProperty: "apiLayer"                                                                # Name of the property that contains the Anypoint Visualizer API Layer
  #apiTagsProperty: "apiTags"                                                                  # Name of the property that contains the Anypoint Visualizer Tags
  #targetProperty: "target"                                                                    # Name of the property that contains the AWS target server
  #targetTypeProperty: "target.type"                                                           # Name of the property that contains the AWS server type
  #deploymentTimeoutProperty: "deploymentTimeout"                                              # Name of the property that contains the Deployment timeout value
  #anypointMQClientIdProperty: "mq_client_id"                                                  # Name of the property that contains the Anypoint MQ Client Id
  #anypointMQClientSecretProperty: "mq_client_secret"                                          # Name of the property that contains the Anypoint MQ Client Secret

# **************************************** DO NOT MAKE ANY CHANGES TO THIS SCRIPT BELOW THIS POINT ****************************************************


# CRITICAL PARAMETERS FOR DEV PARAMETERS
  anypointPlatformBusinessGroup: "Accenture"                                      # The runtime Business Group (Default: master org)
  businessGroupId: a96e0ab7-30e6-406d-8eae-0f415dc4b9b0                                       # Businessgroup ID from Anypoint platform
  #anypointPlatformClientId: ${{ secrets.anypoint_platform_client_id_dev }}                    # Cloudhub Environment Client ID
  #anypointPlatformClientSecret: ${{ secrets.anypoint_platform_client_secret_dev }}            # Cloudhub Environment Client Secret
  anypointPlatformBaseUri: https://anypoint.mulesoft.com/                                     # always https://anypoint.mulesoft.com/
  anypointPlatformUsername: ${{ secrets.anypoint_username_sandbox }}                         # Anypoint Platform Identity Username for deployment
  anypointPlatformPassword: ${{ secrets.anypoint_password_sandbox }}                          # Anypoint Platform Identity Password for deployment
  anypointPlatformEnvName: Sandbox
    
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    
    - uses: actions/checkout@v2
    
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: Print effective-settings (optional)
      run: mvn help:effective-settings
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    
    - name: Upload artifact 
      uses: actions/upload-artifact@master
      with:
          name: artifacts
          path: target/*.jar
        
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:    
    
    - uses: actions/checkout@v2
    
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@master
      with:
        name: artifacts
    
    - name: Deploy to Sandbox
      env:
        USERNAME: ${{ secrets.ANYPOINT_USERNAME_SANDBOX }}
        PASSWORD: ${{ secrets.ANYPOINT_PASSWORD_SANDBOX }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn -X deploy -DmuleDeploy -DskipMunitTests
        -D${{ env.anypointPlatformBaseUriProperty }}=${{ env.anypointPlatformBaseUri }}
        -D${{ env.muleVersionProperty }}=${{ env.muleVersion }}
        -D${{ env.deploymentRegionProperty }}=${{ env.region }}
        -D${{ env.anypointPlatformUsername }}=${{ env.USERNAME }}
        -D${{ env.anypointPlatformPassword }}=${{ env.PASSWORD }}
        -D${{ env.applicationNameProperty }}=${{ env.applicationName }}
        -D${{ env.workersProperty }}=${{ env.workers }}
        -D${{ env.workerTypeProperty }}=${{ env.workerType }}
        -D${{ env.anypointPlatformEnvProperty }}=${{ env.workflowEnv }}
